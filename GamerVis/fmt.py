#! /usr/bin/env python
#
# -*- coding: utf-8 -*-
#
#  Purpose:
#    Data format in the ASCII files generated by GAMER.
#

__all__ = ("fmt_centquant_lightbulb",
           "fmt_centquant_leakage",
           "fmt_quadmom"             )


import numpy as np


# Record__CentralQuant (lightbulb scheme)
fmt_centquant_lightbulb = np.dtype( [("time",             "<f8"),     # physical time
                                     ("step",             "<i4"),     # step
                                     ("posx",             "<f8"),     # x-coordinate of the cell with the highest density
                                     ("posy",             "<f8"),     # y-coordinate of the cell with the highest density
                                     ("posz",             "<f8"),     # z-coordinate of the cell with the highest density
                                     ("dens",             "<f8"),     # maximum density within the simulation domain
                                     ("ye",               "<f8"),     # electron fraction of the cell with the highest density
                                     ("rsh_min",          "<f8"),     # minimum shock radius
                                     ("rsh_ave_V",        "<f8"),     # mean    shock radius weighted by the cell volume
                                     ("rsh_ave_Vinv",     "<f8"),     # mean    shock radius weighted by the inverse cell volume
                                     ("rsh_max",          "<f8"),     # maximum shock radius
                                     ("ccsn_x",           "<f8"),     # reference center of the x-coordinate
                                     ("ccsn_y",           "<f8"),     # reference center of the y-coordinate
                                     ("ccsn_z",           "<f8") ] )  # reference center of the z-coordinate

# Record__CentralQuant (leakage scheme)
fmt_centquant_leakage = np.dtype( [("time",             "<f8"),     # physical time
                                   ("step",             "<i4"),     # step
                                   ("posx",             "<f8"),     # x-coordinate of the cell with the highest density
                                   ("posy",             "<f8"),     # y-coordinate of the cell with the highest density
                                   ("posz",             "<f8"),     # z-coordinate of the cell with the highest density
                                   ("dens",             "<f8"),     # maximum density within the simulation domain
                                   ("ye",               "<f8"),     # electron fraction of the cell with the highest density
                                   ("rsh_min",          "<f8"),     # minimum shock radius
                                   ("rsh_ave_V",        "<f8"),     # mean    shock radius weighted by the cell volume
                                   ("rsh_ave_Vinv",     "<f8"),     # mean    shock radius weighted by the inverse cell volume
                                   ("rsh_max",          "<f8"),     # maximum shock radius
                                   ("ccsn_x",           "<f8"),     # reference center of the x-coordinate
                                   ("ccsn_y",           "<f8"),     # reference center of the y-coordinate
                                   ("ccsn_z",           "<f8"),     # reference center of the z-coordinate
                                   ("leak_netheat",     "<f8"),     # total energy change rate
                                   ("leak_lum_nue",     "<f8"),     # total luminosity of Nu_e
                                   ("leak_lum_nua",     "<f8"),     # total luminosity of Nu_a
                                   ("leak_lum_nux",     "<f8"),     # total luminosity of Nu_x
                                   ("leak_heat_nue",    "<f8"),     # total heating rate of Nu_e
                                   ("leak_heat_nua",    "<f8"),     # total heating rate of Nu_a
                                   ("leak_netheat_nue", "<f8"),     # total net heating rate of Nu_e
                                   ("leak_netheat_nua", "<f8"),     # total net heating rate of Nu_a
                                   ("leak_eave_nue",    "<f8"),     # average neutrino energy of Nu_e at the neutrino sphere across leakage rays
                                   ("leak_eave_nua",    "<f8"),     # average neutrino energy of Nu_a at the neutrino sphere across leakage rays
                                   ("leak_eave_nux",    "<f8"),     # average neutrino energy of Nu_x at the neutrino sphere across leakage rays
                                   ("leak_radns_nue",   "<f8"),     # radius of neutrino sphere of Nu_e
                                   ("leak_radns_nua",   "<f8"),     # radius of neutrino sphere of Nu_a
                                   ("leak_radns_nux",   "<f8") ] )  # radius of neutrino sphere of Nu_x

# Record__QuadMom_2nd
fmt_quadmom = np.dtype( [("time", "<f8"),     # physical time
                         ("step", "<i4"),     # step
                         ("Ixx",  "<f8"),     # xx-component of 2nd-order time derivative of mass quadrupole moments
                         ("Ixy",  "<f8"),     # xx-component of 2nd-order time derivative of mass quadrupole moments
                         ("Ixz",  "<f8"),     # xx-component of 2nd-order time derivative of mass quadrupole moments
                         ("Iyy",  "<f8"),     # xx-component of 2nd-order time derivative of mass quadrupole moments
                         ("Iyz",  "<f8"),     # xx-component of 2nd-order time derivative of mass quadrupole moments
                         ("Izz",  "<f8") ] )  # xx-component of 2nd-order time derivative of mass quadrupole moments
